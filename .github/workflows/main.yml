name: CI for Foodgram project


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:


jobs:

  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: django_foodgram
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:

      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8==6.0.0 flake8-isort==6.0.0
          pip install -r ./backend/foodgram_backend/requirements.txt
      - name: Test with flake8 and pytest tests
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
        run: |
          python -m flake8 backend/
          pytest -v
    
    build_backend_and_push_to_docker_hub:
      name: Push backend image
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./foodgram_backend/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
    
    frontend_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up nodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: |
        cd frontend/
        npm ci

    - name: Test frontend
      run: |
        cd frontend/
        npm run test

    build_frontend_and_push_to_docker_hub:
      name: Push frontend image
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

    build_gateway_and_push_to_docker_hub:
      name: Push gateway image
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./infra/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

    deploy:
      runs-on: ubuntu-latest
      needs:
        - build_backend_and_push_to_docker_hub
        - build_frontend_and_push_to_docker_hub
        - build_gateway_and_push_to_docker_hub
      
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Copy docker-compose.production.yml via ssh
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            source: "docker-compose.production.yml"
            target: "foodgram/"
      
        - name: Executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            script: |
              cd foodgram
              sudo docker compose -f docker-compose.production.yml pull
              sudo docker compose -f docker-compose.production.yml down
              sudo docker compose -f docker-compose.production.yml up -d
              for i in {1..5}; do
                sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate && break || sleep 5
              done
              sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
              sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collect_static/. /backend_static/
        
        